fn firstoccurrence(arr: &[i32], target: i32) -> Option<usize> {
    // Use binary search to find the target
    let mut left = 0;
    let mut right = arr.len();

    while left < right {
        let mut mid = left + (right - left) / 2;

        if arr[mid] == target {
            // Found the target, check for earlier occurrences
            while mid > 0 && arr[mid - 1] == target {
                mid-= 1;
            }
            return Some(mid);
        } else if arr[mid] < target {
            left = mid + 1;
        } else {
            right = mid;
        }
    }

    // Target not found
    None
}

fn main() {
    let arr = [1,2, 3, 3,3,4, 5, 5,6, 7,9];
    let target = 3;

    match firstoccurrence(&arr, target) {
        Some(index) => println!("First occurrence of {} at index {}", target, index),
        None => println!("{} not found in the array", target),
    }
}
